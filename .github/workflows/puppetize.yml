name: Puppetize
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

defaults:
  run:
    shell: powershell

jobs:
  setup_matrix:
    name: "Setup Matrix"
    runs-on: windows-latest
    outputs:
      publish_matrix: ${{ steps.build-matrix.outputs.publish_matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: PSVersion Table
        run: $psversiontable
      - name: Install PowerShell Prerequisites
        run: |
          Import-Module PowerShellGet
          $VerbosePreference = 'Continue'
          Install-Module -Name Puppet.Dsc -MinimumVersion 1.0.0 -Scope AllUsers -Force
      - name: Build Matrix
        id: build-matrix
        run: |
          $VerbosePreference = 'Continue'
          $SkipList = @(
            'DellBIOSProvider'                    # Cannot be built because some of the Resources are malformed/invalid PowerShell; source code not available to report bug
            'DellBIOSProviderX86'                 # Cannot be built because some of the Resources are malformed/invalid PowerShell; source code not available to report bug
            'Microsoft365DSC'                     # https://github.com/microsoft/Microsoft365DSC/issues/1383
            'xSql'                                # Cannot be built because some of the Resources are malformed/invalid PowerShell; source code not available to report bug
            'PrintManagementDsc'                  # Cannot be built because of an error in using non-gallery dependencies; TODO: TICKET
            'xSynergy'                            # Cannot be built because some of the Resources are malformed/invalid PowerShell; source code not available to report bug
            'PowerStig'                           # Module with vendored dependencies is too large for Forge Upload
            'ADCSTemplate'                        # Module missing summary - need to fix parsing for Update-PuppetModuleMetadata; TODO: TICKET
            'QlikResources'                       # Module fails to load because of failure in dependency module, Qlik-Cli; TODO: TICKET
            'GuestConfiguration'                  # Binary DSC Resources in module do not have their module name included; source code not available to report bug
            'cIBMInstallationManager'             # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'cIBMWebSphereAppServer'              # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'Cisco.UCS.DesiredStateConfiguration' # Cannot save the module due to license agreement
            'cWMIPermanentEvents'                 # Cannot load localized datafile; Project has not been updated since 2014
            'xPrinter'                            # Missing module metadata
            'cEPRSAzureFeatures'                  # Malformed module not updated since 2015
            'cEprsCreateWindowsService'           # Malformed module not updated since 2015
            'POSHOrigin_ActiveDirectoryDNS'       # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'cMDTBuildLab'                        # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'LAPS.Nano.DSC'                       # PowerShell module manifest is malformed; module not updates since 2016
            'posh-kentico'                        # Module with vendored dependencies is too large for Forge Upload
            'cIBMHTTPServer'                      # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'cIBMWebSpherePortal'                 # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'CISDSC'                              # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'GenericInstall'                      # Malformed module not actively maintained
            'cWebManagementService'               # Needs to have IIS installed to build
            'PfaDscResource'                      # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'xITGHyperV'                          # Lacks root module; not under active development
            'TestEmbeddedDSCResource'             # PowerShell 7 Only
            'DSCR_MIMSettings'                    # Cannot load dependency module; TODO: Ticket and validate loading of dependency modules/modulepath during run
            'Carbon'                              # Permission denied when copying carbon.dll; TODO: Ticket and validate
          )
          Try {
            [System.Collections.Generic.List[string]]$Results = Get-UnpuppetizedDscModuleVersion -ForgeNameSpace dsc -OnlyNewer |
              Where-Object -FilterScript { $_.Name -notin $SkipList } |
              Select-Object -First 10 -ExpandProperty Name
            echo "Modules to Build & Release:"
            ($Results | ForEach-Object -Process { "`t$_" }) -join "`r`n"
          } Catch {
            $_ | Format-List -Property * -Force
            Throw 'ERROR! See above!'
          }
          If ($Results.Count -eq 0) {
            echo "Empty matrix!"
            echo "::set-output name=publish_matrix::{}"
          } Else {
            $Matrix = @{ module_name = $Results }
            echo "Build Matrix:`r`n$($Matrix | ConvertTo-Json)"
            echo "::set-output name=publish_matrix::$($Matrix | ConvertTo-Json -Compress)"
          }
  publish_unreleased_versions:
    name: "Puppetize ${{ matrix.module_name }}"
    needs:
      - setup_matrix
    if: ${{ needs.setup_matrix.outputs.publish_matrix != '{}' }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_matrix.outputs.publish_matrix) }}
    steps:
      - name: PSVersion Table
        run: $psversiontable
      - name: Install Prerequisites
        run: |
          choco install pdk -y
          Import-Module C:\ProgramData\chocolatey\helpers\chocolateyProfile.psm1
          Update-SessionEnvironment
          Install-Module -Name Puppet.Dsc -MinimumVersion 1.0.0 -Scope AllUsers -Force
          Get-Command PDK, Publish-NewDscModuleVersion
      - name: Configure WinRM
        run: |
          Write-Host 'Ensuring WinRM is configured for DSC'
          Get-ChildItem WSMan:\localhost\Listener\ -OutVariable Listeners | Format-List * -Force
          $HTTPListener = $Listeners | Where-Object -FilterScript { $_.Keys.Contains('Transport=HTTP') }
          If ($HTTPListener.Count -eq 0) {
            winrm create winrm/config/Listener?Address=*+Transport=HTTP
            winrm e winrm/config/listener
          }
      - name: Publish Unreleased Versions
        env:
          FORGE_TOKEN: ${{ secrets.FORGE_API_TOKEN }}
        run: |
          $VerbosePreference = 'Continue'
          $PublishParameters = @{
            ForgeNameSpace = 'dsc'
            Name = '${{ matrix.module_name }}'
            OnlyNewer = $true
            MaxBuildCount = 5
          }
          $PublishParameters
          Publish-NewDscModuleVersion @PublishParameters
